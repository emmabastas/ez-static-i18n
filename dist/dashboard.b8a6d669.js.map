{"mappings":"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","sources":["<anon>","src/webComponents/translationTable.ts"],"sourcesContent":["var $4c9baf7474b16201$exports = {};\nfunction $4c9baf7474b16201$var$isTag(e, tag) {\n    if (!(e instanceof HTMLElement)) return false;\n    return e.tagName.toLowerCase() === tag;\n}\nfunction $4c9baf7474b16201$var$zip(a, b) {\n    if (a.length === 0 || b.length === 0) return [];\n    return [\n        [\n            a.pop(),\n            b.pop()\n        ],\n        ...$4c9baf7474b16201$var$zip(a, b)\n    ];\n}\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nasync function $4c9baf7474b16201$var$sha256(data) {\n    const msgUint8 = new TextEncoder().encode(data);\n    const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n    return hashHex;\n}\nclass $4c9baf7474b16201$var$TranslationTable extends HTMLElement {\n    constructor(){\n        super(), this.initialized = false, this.languages = [];\n    }\n    static get observedAttributes() {\n        return [\n            \"project-name\"\n        ];\n    }\n    connectedCallback() {\n        if (this.initialized) return;\n        this.initialized = true;\n        setTimeout(this.foo.bind(this), 0);\n    }\n    async foo() {\n        const table = this.children[0];\n        if (!$4c9baf7474b16201$var$isTag(table, \"table\")) throw new Error(\"Unexpected\");\n        console.log(this.children);\n        // We expect there to be at least on child element, which is the\n        // table header containing the languages.\n        if (table.children.length === 0) throw new Error(\"Unexpected\");\n        // We expect it to contain a <thead> and a <tbody>\n        const [thead, tbody] = table.children;\n        if (!$4c9baf7474b16201$var$isTag(thead, \"thead\") || !$4c9baf7474b16201$var$isTag(tbody, \"tbody\")) throw new Error(\"Unexpected\");\n        // The thead should have on <tr> child\n        if (thead.children.length !== 1 || !$4c9baf7474b16201$var$isTag(thead.children[0], \"tr\")) throw new Error(\"Unexpected\");\n        const header = thead.children[0];\n        const entries = tbody.children;\n        // Parse the header containing the languages\n        if (!$4c9baf7474b16201$var$isTag(header, \"tr\")) throw new Error(\"Unexpected\");\n        if (header.children.length === 0) throw new Error(\"Unexpected\");\n        for (const e of header.children){\n            if (!$4c9baf7474b16201$var$isTag(e, \"th\")) throw new Error(\"Unexpected\");\n            this.languages.push(e.innerHTML);\n        }\n        // Parse the body.\n        for (const row of entries){\n            if (!$4c9baf7474b16201$var$isTag(row, \"tr\")) throw new Error(\"Unexpected\");\n            if (![\n                ...row.children\n            ].every((e)=>$4c9baf7474b16201$var$isTag(e, \"td\"))) throw new Error(\"Unexpected\");\n            const rowElements = [\n                ...row.children\n            ];\n            if (row.children.length !== this.languages.length) throw new Error(\"Unexpected\");\n            // rowElements is non-empty because\n            //   row.children.length === this.languages.length\n            // and we checked above that header.children.length !== 0\n            // and so this.languages.length !== 0\n            const phrase = rowElements[0].innerText;\n            const hash = await $4c9baf7474b16201$var$sha256(phrase);\n            row.id = hash;\n            for (const [e, language] of $4c9baf7474b16201$var$zip(rowElements.slice(1), this.languages.slice(1))){\n                const input = document.createElement(\"input\");\n                input.setAttribute(\"type\", \"text\");\n                input.value = e.innerText;\n                e.replaceChildren(input);\n                input.addEventListener(\"change\", ()=>{\n                    // TODO this is hardcoded\n                    fetch(`/translation/${this.getAttribute(\"project-name\")}/${language}/${hash}/`, {\n                        method: \"POST\",\n                        body: input.value,\n                        headers: {\n                            \"Content-Type\": \"text/plain\"\n                        }\n                    });\n                });\n            }\n        }\n    }\n}\ncustomElements.define(\"translation-table\", $4c9baf7474b16201$var$TranslationTable);\n\n\nexport {$4c9baf7474b16201$exports as default};\n//# sourceMappingURL=dashboard.b8a6d669.js.map\n","function isTag(e: ChildNode, tag: \"table\"): e is HTMLTableElement\nfunction isTag(e: ChildNode, tag: \"thead\"): e is HTMLTableSectionElement\nfunction isTag(e: ChildNode, tag: \"tbody\"): e is HTMLTableSectionElement\nfunction isTag(e: ChildNode, tag: \"tr\"): e is HTMLTableRowElement\nfunction isTag(e: ChildNode, tag: \"th\"): e is HTMLTableCellElement\nfunction isTag(e: ChildNode, tag: \"td\"): e is HTMLTableCellElement\nfunction isTag(e: ChildNode, tag: string): e is HTMLElement {\n    if (! (e instanceof HTMLElement)) {\n        return false\n    }\n    return e.tagName.toLowerCase() === tag\n}\n\nfunction zip<A, B>(a: A[], b: B[]): [A, B][] {\n    if (a.length === 0 || b.length === 0) {\n        return []\n    }\n    return [[a.pop()!, b.pop()!], ...zip(a, b)]\n}\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nasync function sha256(data: string) {\n  const msgUint8 = new TextEncoder().encode(data);\n  const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hashHex;\n}\n\nclass TranslationTable extends HTMLElement {\n    private initialized: boolean = false\n    private languages: string[] = []\n\n    constructor() {\n        super()\n    }\n\n    static get observedAttributes() {\n        return [ \"project-name\" ]\n    }\n\n    connectedCallback() {\n        if (this.initialized) return\n        this.initialized = true\n\n        setTimeout(this.foo.bind(this), 0)\n    }\n\n    async foo() {\n        const table = this.children[0]\n        if (! isTag(table, \"table\")) {\n            throw new Error(\"Unexpected\")\n        }\n\n        console.log(this.children)\n\n        // We expect there to be at least on child element, which is the\n        // table header containing the languages.\n        if (table.children.length === 0) {\n            throw new Error(\"Unexpected\")\n        }\n\n        // We expect it to contain a <thead> and a <tbody>\n        const [ thead, tbody ] = table.children\n        if (!isTag(thead, \"thead\") || !isTag(tbody, \"tbody\")) {\n            throw new Error(\"Unexpected\")\n        }\n\n        // The thead should have on <tr> child\n        if (thead.children.length !== 1 || !isTag(thead.children[0], \"tr\")) {\n            throw new Error(\"Unexpected\")\n        }\n        const header = thead.children[0]\n\n        const entries = tbody.children\n\n        // Parse the header containing the languages\n        if (! isTag(header, \"tr\")) {\n            throw new Error(\"Unexpected\")\n        }\n        if (header.children.length === 0) {\n            throw new Error(\"Unexpected\")\n        }\n        for (const e of header.children) {\n            if (! isTag(e, \"th\")) {\n                throw new Error(\"Unexpected\")\n            }\n            this.languages.push(e.innerHTML)\n        }\n\n        // Parse the body.\n        for (const row of entries) {\n            if (! isTag(row, \"tr\")) {\n                throw new Error(\"Unexpected\")\n            }\n\n            if (! [...row.children].every(e => isTag(e, \"td\"))) {\n                throw new Error(\"Unexpected\")\n            }\n            const rowElements = [...row.children] as HTMLTableCaptionElement[]\n\n            if (row.children.length !== this.languages.length) {\n                throw new Error(\"Unexpected\")\n            }\n\n            // rowElements is non-empty because\n            //   row.children.length === this.languages.length\n            // and we checked above that header.children.length !== 0\n            // and so this.languages.length !== 0\n            const phrase = rowElements[0]!.innerText\n            const hash = await sha256(phrase)\n\n            row.id = hash\n\n            for (const [e, language] of zip(\n                rowElements.slice(1),\n                this.languages.slice(1),\n            )) {\n                const input = document.createElement(\"input\")\n                input.setAttribute(\"type\", \"text\")\n                input.value = e.innerText\n                e.replaceChildren(input)\n                input.addEventListener(\"change\", () => {\n                    // TODO this is hardcoded\n                    fetch(`/translation/${this.getAttribute(\"project-name\")}/${language}/${hash}/`, {\n                        method: \"POST\",\n                        body: input.value,\n                        headers: {\n                            \"Content-Type\": \"text/plain\",\n                        }\n                    })\n                })\n            }\n        }\n    }\n}\n\ncustomElements.define(\"translation-table\", TranslationTable)\n"],"names":["$4c9baf7474b16201$exports","$4c9baf7474b16201$var$isTag","e","tag","HTMLElement","tagName","toLowerCase","$4c9baf7474b16201$var$sha256","data","msgUint8","TextEncoder","encode","hashArray","Array","from","Uint8Array","window","crypto","subtle","digest","map","b","toString","padStart","join","$4c9baf7474b16201$var$TranslationTable","initialized","languages","observedAttributes","connectedCallback","setTimeout","foo","bind","table","children","console","log","length","Error","thead","tbody","header","entries","push","innerHTML","row","every","rowElements","phrase","innerText","hash","language","id","$4c9baf7474b16201$var$zip","a","pop","slice","input","document","createElement","setAttribute","value","replaceChildren","addEventListener","fetch","getAttribute","method","body","headers","customElements","define","default"],"version":3,"file":"dashboard.b8a6d669.js.map","sourceRoot":"../"}