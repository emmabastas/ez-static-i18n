{"mappings":"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","sources":["src/webComponents/translationTable.ts"],"sourcesContent":["function isTag(e: ChildNode, tag: \"table\"): e is HTMLTableElement\nfunction isTag(e: ChildNode, tag: \"thead\"): e is HTMLTableSectionElement\nfunction isTag(e: ChildNode, tag: \"tbody\"): e is HTMLTableSectionElement\nfunction isTag(e: ChildNode, tag: \"tr\"): e is HTMLTableRowElement\nfunction isTag(e: ChildNode, tag: \"th\"): e is HTMLTableCellElement\nfunction isTag(e: ChildNode, tag: \"td\"): e is HTMLTableCellElement\nfunction isTag(e: ChildNode, tag: string): e is HTMLElement {\n    if (! (e instanceof HTMLElement)) {\n        return false\n    }\n    return e.tagName.toLowerCase() === tag\n}\n\nfunction zip<A, B>(a: A[], b: B[]): [A, B][] {\n    if (a.length === 0 || b.length === 0) {\n        return []\n    }\n    return [[a.pop()!, b.pop()!], ...zip(a, b)]\n}\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nasync function sha256(data: string) {\n  const msgUint8 = new TextEncoder().encode(data);\n  const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  return hashHex;\n}\n\nclass TranslationTable extends HTMLElement {\n    private initialized: boolean = false\n    private languages: string[] = []\n\n    constructor() {\n        super()\n    }\n\n    static get observedAttributes() {\n        return [ \"project-name\" ]\n    }\n\n    connectedCallback() {\n        if (this.initialized) return\n        this.initialized = true\n\n        setTimeout(this.foo.bind(this), 0)\n    }\n\n    async foo() {\n        const table = this.children[0]\n        if (! isTag(table, \"table\")) {\n            throw new Error(\"Unexpected\")\n        }\n\n        console.log(this.children)\n\n        // We expect there to be at least on child element, which is the\n        // table header containing the languages.\n        if (table.children.length === 0) {\n            throw new Error(\"Unexpected\")\n        }\n\n        // We expect it to contain a <thead> and a <tbody>\n        const [ thead, tbody ] = table.children\n        if (!isTag(thead, \"thead\") || !isTag(tbody, \"tbody\")) {\n            throw new Error(\"Unexpected\")\n        }\n\n        // The thead should have on <tr> child\n        if (thead.children.length !== 1 || !isTag(thead.children[0], \"tr\")) {\n            throw new Error(\"Unexpected\")\n        }\n        const header = thead.children[0]\n\n        const entries = tbody.children\n\n        // Parse the header containing the languages\n        if (! isTag(header, \"tr\")) {\n            throw new Error(\"Unexpected\")\n        }\n        if (header.children.length === 0) {\n            throw new Error(\"Unexpected\")\n        }\n        for (const e of header.children) {\n            if (! isTag(e, \"th\")) {\n                throw new Error(\"Unexpected\")\n            }\n            this.languages.push(e.innerHTML)\n        }\n\n        // Parse the body.\n        for (const row of entries) {\n            if (! isTag(row, \"tr\")) {\n                throw new Error(\"Unexpected\")\n            }\n\n            if (! [...row.children].every(e => isTag(e, \"td\"))) {\n                throw new Error(\"Unexpected\")\n            }\n            const rowElements = [...row.children] as HTMLTableCaptionElement[]\n\n            if (row.children.length !== this.languages.length) {\n                throw new Error(\"Unexpected\")\n            }\n\n            // rowElements is non-empty because\n            //   row.children.length === this.languages.length\n            // and we checked above that header.children.length !== 0\n            // and so this.languages.length !== 0\n            const phrase = rowElements[0]!.innerText\n            const hash = await sha256(phrase)\n\n            row.id = hash\n\n            for (const [e, language] of zip(\n                rowElements.slice(1),\n                this.languages.slice(1),\n            )) {\n                const input = document.createElement(\"input\")\n                input.setAttribute(\"type\", \"text\")\n                input.value = e.innerText\n                e.replaceChildren(input)\n                input.addEventListener(\"change\", () => {\n                    // TODO this is hardcoded\n                    fetch(`/translation/${this.getAttribute(\"project-name\")}/${language}/${hash}/`, {\n                        method: \"POST\",\n                        body: input.value,\n                        headers: {\n                            \"Content-Type\": \"text/plain\",\n                        }\n                    })\n                })\n            }\n        }\n    }\n}\n\ncustomElements.define(\"translation-table\", TranslationTable)\n"],"names":[],"version":3,"file":"dashboard.01fe8188.js.map","sourceRoot":"../"}